// routerpayload.src - Get root shell and start it.
import_code("/home/5n4k3/src/helper.src")

if (params.len % 2) != 0 then exit("<b>Usage: " + get_name() + " [address] [port] [...]</b>")
if not is_valid_ip(params[0]) then exit(get_name() + ": Invalid IP given.")
if (params.len % 2) != 0 and params[1].to_int < 0 or params[1].to_int > 65535 then exit(get_name() + ": Invalid port given.")

mx = get_library("metaxploit.so", true)
if not mx then exit
crypto = get_library("crypto.so", true)
if not crypto then exit
lib = use_exploit(mx, params[0], params[1].to_int)
if not lib then exit

print("Trying to exploit target [<color=#BB0000><b>" + params[0] + ":" + params[1] + "</b></color>]...")
exploits = get_exploits(lib, params[0], params[1].to_int, true)
if not exploits then exit(get_name() + ": Can't find exploits.")

result = null
passwd = null

for exploit in exploits
	memory = exploit["address"]
	print(">---[<color=#AA0000><b>" + memory + "</b></color>]---<")
	for value in exploit["values"]
		if result and passwd then break
		
		print(value["value"] + " -> " + value["type"])
		
		if not result and value["type"] == "shell" then
			result = value["result"]
		else if not passwd and value["type"] == "file" then
			passwd = value["result"]
			
			while passwd.path != "/"
				passwd = passwd.parent
			end while
			
			for folder in passwd.get_folders
				if folder.name == "etc" then
					passwd = folder
					break
				end if
			end for
			
			for file in passwd.get_files
				if file.name == "passwd" then
					passwd = file
					break
				end if
			end for
		end if
	end for
	if result and passwd then break
end for

import_code("/home/5n4k3/src/shellhelp.src")

if not result then
	print_error("Can't get shell.")
	exit("Program ended")
end if

args = []
i = 2
while i < params.len
	args.push(params[i] + " " + params[i+1])
	i = i + 2
end while
if args.len == 0 then args.push(params[0] + " " + params[1])

filenames = ["metaxploit.so", "crypto.so", "routerpayload", "computerpayload", "0day"]
replicate(result, filenames)
result.launch("/home/guest/0day", args.join(" "))
cleanup(result, filenames)

