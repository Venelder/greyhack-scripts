// routervirus.src - Hack router remotely to system and reboot it.
import_code("/home/5n4k3/src/helper.src")

if params.len != 1 or params[0] == "-h" or params[0] == "--help" then exit("<b>Usage: " + get_name() + " [public ip]</b>")
if not is_valid_ip(params[0]) then exit(get_name() + ": IP address is invalid.")

mx = get_library("metaxploit.so", true)
crypto = get_library("crypto.so", true)
lib = use_exploit(params[0])

exploits = get_exploits(params[0])
if not exploits then exit(get_name() + ": Can't find vulnerabilities.")

// Will show a log after this runs
for exploit in exploits
	address = exploit["address"]
	print("<color=#00CC00>Address >=====[</color><b>" + address + "</b><color=#00CC00>]=====<</color>")
	for value in exploit["values"]
		print("<color=#CC0000>Value >=====[</color><b>" + value + "</b><color=#CC0000>]=====<</color>")
		result = lib.overflow(address, value)
		if not result then continue
			
		if typeof(result) == "computer" then
			passwd = result.File("/etc/passwd")
			if not passwd then exit(get_name() + ": /etc/passwd doesn't exist.")
			if not passwd.has_permission("r") then exit(get_name() + ": Permission denied.")
				
			// Get password
			root = passwd.get_content.split("\n")[0]
			if not root then exit(get_name() + ": Could not get root account info.")
			password = root.split(":")[-1]
			if not password then exit(get_name() + ": Could not get password.")
			password = crypto.decipher(password)
			
			// Login as root
			for port in result.get_ports
				if port.is_closed then
					print("Port " + port.port_number + " is " + status)
				else
					shell = get_shell.connect_service(params[1], port.port_number, root[0], password)
					if typeof(shell) == "shell" then
						shell.start_terminal
					end if
				end if
			end for
		end if
	end for
end for

