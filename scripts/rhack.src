usage = "<b>Usage: "+program_path.split("/")[-1]+" [address] [port] [print_pass] (password)</b>\n"
usage = usage + "Default password is: dick"
if params.len != 3 or params[0] == "-h" or params[0] == "--help" then exit(usage)
if not is_valid_ip(params[0]) then exit("Error: Invalid IP address given")
address = params[0]

password = "dick"
if params.len == 4 then
	password = params[3]
end if

mx = include_lib("/lib/metaxploit.so")
if not mx then mx = include_lib(current_path + "/metaxploit.so")
if not mx then exit("Error: metaxploit.so not found")
ns = mx.net_use(params[0], params[1].to_int)
if not ns then exit("Error: Can't connect to net session")
lib = ns.dump_lib
if not lib then exit("Error: Can't dump library")
print("Running all exploits on " + address + "...")
print("Library: " + lib.lib_name + ":" + lib.version)

quit = function(shell, pass)
	if params[2].to_int == 0 then
		get_shell.launch("/bin/decipher", pass)
	else
		print("Password data below:\n------------------------\n" + pass + "\n")
	end if
	shell.start_terminal
end function

shell = null
pass = null

memory = mx.scan(lib)
if not memory then exit("Error: Can't scan library")
for mem in memory
	address = mx.scan_address(lib, mem).split("Unsafe check: ")
	for addr in address
		if addr == address[0] then continue
		if shell and pass then quit(shell, pass)
		
		// Get all values from library
		value = addr[addr.indexOf("<b>")+3:addr.indexOf("</b>")]
		value = value.replace("\n", "")
		result = lib.overflow(mem, value, password)
		if not result then continue
		comp = null

		// Check for shell or computer
		if typeof(result) == "shell" then
			shell = result
			comp = result.host_computer
		else if typeof(result) == "computer" then
			comp = result
		else if not pass and typeof(result) == "file" then
			while not result.path == "/"
				result = result.parent
			end while
			
			files = null
			for folder in result.get_folders
				if folder.path == "/etc" then
					files = folder.get_files
					break
				end if
			end for

			result = null			
			for file in files
				if file.name == "passwd" then
					result = file
					break
				end if
			end for

			if not result then continue
			cont = result.get_content
			if not cont then continue
			pass = cont.split("\n")[0]
			if shell then quit(shell, pass)
		end if

		// Some checks for password file
		if not comp then continue
		file = comp.File("/etc/passwd")
		if not file then continue
		cont = file.get_content
		if not cont then continue
		pass = cont.split("\n")[0]
		if shell then quit(shell, pass)
	end for
end for

